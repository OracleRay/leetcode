cmake_minimum_required(VERSION 3.27)
project(leetcode)

set(CMAKE_CXX_STANDARD 14)

add_executable(leetcode
        addTwoNumbers.cpp
        containsDuplicate.cpp
        convertToTitle.cpp
        findMedianSortedArrays.cpp
        findRestaurant.cpp
        findWords.cpp
        getRow.cpp
        hammingWeight.cpp
        hasPathSum.cpp
        intToRoman.cpp
        isPalindrome.cpp
        lengthOfLongestSubstring.cpp
        letterCombinations.cpp
        longestPalindrome.cpp
        majorityElement.cpp
        maxProfit.cpp
        singleNumber.cpp
        strStr.cpp
        sumIndicesWithKSetBits.cpp
        titleToNumber.cpp
        uniqueMorseRepresentations.cpp
        isIsomorphic.cpp
        threeSumClosest.cpp
        reverse.cpp
        myAtoi.cpp
        removeNthFromEnd.cpp
        myPow.cpp
        isValid.cpp
        sortColors.cpp
        countGoodTriplets.cpp
        longestPalindrome2.cpp
        addDigits.cpp
        multiply.cpp
        isHappy.cpp
        findContentChildren.cpp
        repeatedSubstringPattern.cpp
        flipAndInvertImage.cpp
        spiralOrder.cpp
        thirdMax.cpp
        exist.cpp
        distributeCandies.cpp
        subsets.cpp
        reverseBits.cpp
        reverseList.cpp
        MyStack.cpp
        removeElements.cpp
        findDisappearedNumbers.cpp
        hammingDistance.cpp
        isPowerOfTwo.cpp
        summaryRanges.cpp
        isUgly.cpp
        missingNumber.cpp
        minCostClimbingStairs.cpp
        uniquePaths.cpp
        uniquePathsWithObstacles.cpp
        canJump.cpp
        jump.cpp
        numDecodings.cpp
        maxSubArray.cpp
        minPathSum.cpp
        isInterleave.cpp
        fourSum.cpp
        searchRange.cpp
        containsNearbyDuplicate.cpp
        isAnagram.cpp
        maximumOddBinaryNumber.cpp
        rotate.cpp
        permute.cpp
        canWinNim.cpp
        findTheDifference.cpp
        validPalindrome.cpp
        validateStackSequences.cpp
        intersection.cpp
        intersect.cpp
        invertTree.cpp
        swapPairs.cpp
        getIntersectionNode.cpp
        merge.cpp
        insert.cpp
        divide.cpp
        nextPermutation.cpp
        search.cpp
        isValidSudoku.cpp
        combinationSum.cpp
        generateMatrix.cpp
        setZeroes.cpp
        rotate2.cpp
        productExceptSelf.cpp
        gameOfLife.cpp
)
